{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardReentrantCall",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "SafeERC20FailedOperation",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "prestamista",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "prestatario",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cantidad",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "interes",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "total_pagar",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "fechas_de_pago",
						"type": "uint256[]"
					}
				],
				"name": "PrestamoCreado",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "prestatario",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cantidad_pagada",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "restante",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "siguiente_fecha",
						"type": "uint256"
					}
				],
				"name": "PrestamoPagado",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "PrestamoPagadoCompleto",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "PrestamoPagoInicial",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "prestatario",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "cantidad",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "interes",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "fechas_de_pago",
						"type": "uint256[]"
					}
				],
				"name": "crear_prestamo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "cuanto_falta",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ejecutar_prestamo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "getLoanInfo",
				"outputs": [
					{
						"internalType": "address",
						"name": "prestamista",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "prestatario",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "cantidad",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "interes",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "total_pagar",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pagado",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "dinero_enviado",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "todo_pagado",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "proxima_fecha",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "cantidad",
						"type": "uint256"
					}
				],
				"name": "pagar_prestamo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "pagos_vencidos",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "prestamos",
				"outputs": [
					{
						"internalType": "address",
						"name": "prestamista",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "prestatario",
						"type": "address"
					},
					{
						"internalType": "contract IERC20",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "cantidad",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "interes",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "total_pagar",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "pagado",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "dinero_enviado",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "todo_pagado",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "proxima_fecha",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "rescueTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ver_fechas_pago",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"ReentrancyGuardReentrantCall()": [
					{
						"details": "Unauthorized reentrant call."
					}
				],
				"SafeERC20FailedOperation(address)": [
					{
						"details": "An operation with an ERC-20 token failed."
					}
				]
			},
			"events": {
				"PrestamoCreado(bytes32,address,address,address,uint256,uint256,uint256,uint256[])": {
					"details": "Evento al crear un nuevo préstamo"
				},
				"PrestamoPagado(bytes32,address,uint256,uint256,uint256)": {
					"details": "Evento cuando el prestatario paga una cuota"
				},
				"PrestamoPagadoCompleto(bytes32)": {
					"details": "Evento cuando el préstamo se liquida por completo"
				},
				"PrestamoPagoInicial(bytes32)": {
					"details": "Evento cuando el prestamista deposita el principal"
				}
			},
			"kind": "dev",
			"methods": {
				"crear_prestamo(bytes32,address,address,uint256,uint256,uint256[])": {
					"params": {
						"cantidad": "Monto a prestar (en unidades del token, sin decimales añadidos).",
						"fechas_de_pago": "Array de timestamps UNIX ordenados de forma estrictamente ascendente (>= block.timestamp). Requisitos:  - Solo el prestamista puede llamar a esta función, pero en esta versión no forzamos modifier; el propio prestamista firma off‑chain.  - id debe no existir aún (mapeo prestamos[id].prestamista == address(0)).  - prestatario ≠ address(0).  - cantidad > 0.  - interes ≤ 10000.  - fechas_de_pago.length ≥ 1. Cada timestamp debe ser >= block.timestamp, y la secuencia debe ser estrictamente creciente. Al llamar:   1) Se calcula total_pagar = cantidad + (cantidad * interes / 10000).   2) Se guarda el Prestamo en prestamos[id], con dinero_enviado=false, pagado=0, todo_pagado=false, proxima_fecha=0.   3) Emite PrestamoCreado. La transferencia del principal (transferFrom) **NO** ocurre aquí, sino en `fundLoan(...)` tras approve.",
						"id": "Identificador único para este préstamo (por ejemplo: keccak256(abi.encodePacked(lender, borrower, block.timestamp))).",
						"interes": "Interés en basis points (p.ej. 500 = 5.00 %). Debe ser ≤ 10000 (100 %).",
						"prestatario": "Dirección Ethereum del prestatario.",
						"token": "Dirección del token ERC‑20 usado (p. ej. DAI, WETH)."
					}
				},
				"ejecutar_prestamo(bytes32)": {
					"params": {
						"id": "ID del préstamo previamente creado. Requisitos:  - Solo el lender (lo que guardamos en loans[id].lender) puede llamar.  - funded == false. Acciones:  1) Ejecuta `token.transferFrom(prestamista, prestatario, cantidad)`.  2) Marca `dinero_enviado = true`.  3) Emite PrestamoPagoInicial(id)."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"pagar_prestamo(bytes32,uint256)": {
					"params": {
						"cantidad": "Monto que el prestatario quiere pagar (debe ser exactamente la cuota esperada). Requisitos:  - prestamos[id].dinero_enviado == true (el préstamo ya fue financiado).  - prestamos[id].todo_pagado == false.  - msg.sender == prestamos[id].prestatario.  - proxima_fecha < fechas_de_pago.length (aún quedan cuotas pendientes).  - block.timestamp >= fechas_de_pago[proxima_fecha] (fecha de vencimiento).  - cantidad == cuotaExacta (para evitar pagos parciales inválidos). Acciones:  1) Transfiere `cantidad` tokens desde prestatario → prestamista (requiere `approve` previo).  2) Actualiza `p.pagado += cantidad`.  3) Incrementa `p.proxima_fecha += 1`.  4) Si proxima_fecha == fechas_de_pago.length, marca `todo_pagado = true` y emite PrestamoPagadoCompleto(id).  5) Emite PrestamoPagado(id, prestatario, cantidad, restante, siguiente_fecha).",
						"id": "ID del préstamo."
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"stateVariables": {
				"prestamos": {
					"details": "Mapping de ID (bytes32) → Loan completo"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"crear_prestamo(bytes32,address,address,uint256,uint256,uint256[])": {
					"notice": "Crea un préstamo “on‑chain” bloqueando el ID y toda la info básica."
				},
				"cuanto_falta(bytes32)": {
					"notice": "Devuelve cuánto falta por pagar (total_pagar ‑ pagado)."
				},
				"ejecutar_prestamo(bytes32)": {
					"notice": "El prestamista debe haber hecho antes: token.approve(this, principal).         Con este paso, el contrato transfiere realmente el principal desde el prestamista al prestatario."
				},
				"getLoanInfo(bytes32)": {
					"notice": "Devuelve información del préstamo concreto (sin exponer internal schedule)."
				},
				"pagar_prestamo(bytes32,uint256)": {
					"notice": "El prestatario paga la cuota correspondiente a la fecha actual (o anterior).          El contrato calcula cuánto se debe en esta cuota como:            montoPorCuota = (saldoRestante) / (fechasTotales - índicesPagados).         o sea, si quedan N fechas y debe R, cada fecha es R/N."
				},
				"pagos_vencidos(bytes32)": {
					"notice": "Devuelve cuántas cuotas ya vencieron (block.timestamp >= fecha)."
				},
				"rescueTokens(address)": {
					"notice": "Permite al owner (admin) retirar tokens sobrantes que puedan quedar en el contrato."
				},
				"ver_fechas_pago(bytes32)": {
					"notice": "Devuelve todas las fechas pactadas (timestamps) para el préstamo."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/loans.sol": "P2PBank"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC1363.sol": {
			"keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
			"license": "MIT",
			"urls": [
				"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
				"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
			"license": "MIT",
			"urls": [
				"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
				"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC20.sol": {
			"keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
			"license": "MIT",
			"urls": [
				"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
				"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
			"license": "MIT",
			"urls": [
				"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
				"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
				"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
				"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
			"license": "MIT",
			"urls": [
				"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
				"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
			]
		},
		"contracts/loans.sol": {
			"keccak256": "0xe02c5036676d1af7332470a6bd8abde6bf97025b514895a8ee2aaa90a29b4b2c",
			"license": "MIT",
			"urls": [
				"bzz-raw://0667b93cd7cc779f1caf0f7a296ce989397ffcb9f23d9f8e952ff75854cc414c",
				"dweb:/ipfs/QmYkCWs4qzb25yNPp67wdntEWx6hKtzaXj1ApQRpkJRheX"
			]
		}
	},
	"version": 1
}